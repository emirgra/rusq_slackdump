// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rusq/slackdump/v3/internal/convert (interfaces: copier)
//
// Generated by this command:
//
//	mockgen -destination=mock_convert/mock_copier.go . copier
//

// Package mock_convert is a generated GoMock package.
package mock_convert

import (
	reflect "reflect"

	slack "github.com/rusq/slack"
	gomock "go.uber.org/mock/gomock"
)

// Mockcopier is a mock of copier interface.
type Mockcopier struct {
	ctrl     *gomock.Controller
	recorder *MockcopierMockRecorder
	isgomock struct{}
}

// MockcopierMockRecorder is the mock recorder for Mockcopier.
type MockcopierMockRecorder struct {
	mock *Mockcopier
}

// NewMockcopier creates a new mock instance.
func NewMockcopier(ctrl *gomock.Controller) *Mockcopier {
	mock := &Mockcopier{ctrl: ctrl}
	mock.recorder = &MockcopierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockcopier) EXPECT() *MockcopierMockRecorder {
	return m.recorder
}

// Copy mocks base method.
func (m *Mockcopier) Copy(arg0 *slack.Channel, arg1 *slack.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Copy", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Copy indicates an expected call of Copy.
func (mr *MockcopierMockRecorder) Copy(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Copy", reflect.TypeOf((*Mockcopier)(nil).Copy), arg0, arg1)
}
